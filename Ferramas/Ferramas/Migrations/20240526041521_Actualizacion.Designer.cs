// <auto-generated />
using System;
using Ferramas.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ferramas.Migrations
{
    [DbContext(typeof(FerraContext))]
    [Migration("20240526041521_Actualizacion")]
    partial class Actualizacion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ferramas.Model.Domain.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PurchasePending")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("Ferramas.Model.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Comestibles / Cocina"
                        },
                        new
                        {
                            Id = 2,
                            Name = "DecoHogar"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pasatiempos"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tecnología"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Construcción"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Moda"
                        });
                });

            modelBuilder.Entity("Ferramas.Model.Domain.FerraUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44a1e669-a3a6-4437-a2cc-6eddbfd1b01c"),
                            Email = "testerina@gmail.com",
                            Name = "Testerina",
                            PasswordHash = "admin",
                            Surname = "Tester"
                        },
                        new
                        {
                            Id = new Guid("1b1ff9cf-8f46-4d0b-8c93-4c2f5f97ea0c"),
                            Email = "acasas@gmail.com",
                            Name = "Armando",
                            PasswordHash = "admin",
                            Surname = "Casas"
                        },
                        new
                        {
                            Id = new Guid("0be7c2dc-5f4b-4175-a2be-940b1edda83b"),
                            Email = "pe.palo@gmail.com",
                            Name = "Pedro",
                            PasswordHash = "admin",
                            Surname = "Palote"
                        });
                });

            modelBuilder.Entity("Ferramas.Model.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9aa1a959-cfe7-4625-b837-bdc5dacba9b8"),
                            CategoryId = 1,
                            Description = "Para hacerte el hipster y decir que cocinas todo con agua.",
                            Image = "aceite.jpg",
                            Name = "Aceite en Polvo",
                            Price = 6500f
                        },
                        new
                        {
                            Id = new Guid("aedc4959-4dfc-4048-b573-9cc43ac68438"),
                            CategoryId = 1,
                            Description = "Un buen producto para nuestros amantes de la cocina, solo no te vayas a equivocar de salero",
                            Image = "sal.webp",
                            Name = "Soda caustica en formato salero",
                            Price = 1200f
                        },
                        new
                        {
                            Id = new Guid("c4d40032-f26f-4a0c-9874-60277f42e66d"),
                            CategoryId = 1,
                            Description = "Mayo vegana con hierro extra para nuestros anemicos favoritos",
                            Image = "mayo.jpg",
                            Name = "NOT MAYO",
                            Price = 3500f
                        },
                        new
                        {
                            Id = new Guid("12c3623d-1c5b-4bbb-9509-eeded088fb01"),
                            CategoryId = 2,
                            Description = "Para demostrarle a Dios que eres impuro pero cuidas de tu salud.",
                            Image = "cuerda1.webp",
                            Name = "Látigo con Puntas de Cobre",
                            Price = 13250f
                        },
                        new
                        {
                            Id = new Guid("bd94180a-eeb2-4771-90f7-fff86f367bed"),
                            CategoryId = 2,
                            Description = "Para hacer el pan de los dioses",
                            Image = "Tostador.jpg",
                            Name = "Tostador chileno",
                            Price = 5000f
                        },
                        new
                        {
                            Id = new Guid("05671a19-9cbb-46f4-b9cc-c1813f34bedf"),
                            CategoryId = 2,
                            Description = "Una ventana que te permitira ver el otro mundo",
                            Image = "Hielo7.gif",
                            Name = "Ventana de hielo 7",
                            Price = 1000f
                        },
                        new
                        {
                            Id = new Guid("86d80819-054d-4f20-a71e-8939d073a4f3"),
                            CategoryId = 3,
                            Description = "Para disfrazarte de alguien que se cree impuro.",
                            Image = "cuerda2.jpg",
                            Name = "Látigo con Puntas Sin Filo",
                            Price = 10250f
                        },
                        new
                        {
                            Id = new Guid("5e734697-2fd4-4d9a-8f14-dc585e72840c"),
                            CategoryId = 3,
                            Description = "Si te sientes inutil, entonces no haz conocido este manual",
                            Image = "Diccionario.jpg",
                            Name = "Hagalo usted mismo manual",
                            Price = 7500f
                        },
                        new
                        {
                            Id = new Guid("eef02b72-ce0f-45ab-bda6-721718d44de9"),
                            CategoryId = 3,
                            Description = "Pateala y el hospital te esperara",
                            Image = "Pelota.jpg",
                            Name = "Pelota cuadrada de acero reforzado",
                            Price = 2000f
                        },
                        new
                        {
                            Id = new Guid("e4de66fb-c174-42fd-bc47-c426b0dc8e5e"),
                            CategoryId = 4,
                            Description = "Para escuchar ese zumbido que molesta a tus vecinos y ver los canales que no te gustan.",
                            Image = "Antena.jpg",
                            Name = "Multiantena de Fierro",
                            Price = 6350f
                        },
                        new
                        {
                            Id = new Guid("242d54bd-18a5-4510-afba-9d8ac3309fff"),
                            CategoryId = 4,
                            Description = "Finge estatus pero con algo de cerebro",
                            Image = "Iphone.webp",
                            Name = "Iphone con bateria incluida",
                            Price = 1000000f
                        },
                        new
                        {
                            Id = new Guid("e7be64e3-6204-4c02-b39e-2d726e3f57ef"),
                            CategoryId = 4,
                            Description = "Un televisor invisible,no hay mas descripcion",
                            Image = "nada.jpg",
                            Name = "Television invisible",
                            Price = 256000f
                        },
                        new
                        {
                            Id = new Guid("48d92b3d-8d68-4fd5-9800-ec25ba8ebd0c"),
                            CategoryId = 5,
                            Description = "Para mostrar la fuerza que no tienes.",
                            Image = "martillo.jpg",
                            Name = "Martillo Doble Golpe",
                            Price = 7360f
                        },
                        new
                        {
                            Id = new Guid("f11395ac-b712-432d-abea-c2eef329deda"),
                            CategoryId = 5,
                            Description = "Ideal para construir aeroplanos",
                            Image = "inalambrico.jpg",
                            Name = "Cable inalambrico",
                            Price = 6000f
                        },
                        new
                        {
                            Id = new Guid("05683091-8eba-4e0e-b10f-68e1d670e96d"),
                            CategoryId = 5,
                            Description = "En el pais no existe",
                            Image = "cadenai.jpg",
                            Name = "Cadena perpetua",
                            Price = 9000f
                        },
                        new
                        {
                            Id = new Guid("a283065b-e854-49ad-b5ab-33d747fd0f87"),
                            CategoryId = 6,
                            Description = "Magnificado a escala con lujo de detalles. Para estudiar lo que no puedes ver.",
                            Image = "p.webp",
                            Name = "Miembro a Escala",
                            Price = 7360f
                        },
                        new
                        {
                            Id = new Guid("fe97ff22-9a0d-41c6-bca2-2eca9cefd36c"),
                            CategoryId = 6,
                            Description = "Prenda que trae sorpresa",
                            Image = "cosplay.webp",
                            Name = "Cosplay de enfermera",
                            Price = 4990f
                        },
                        new
                        {
                            Id = new Guid("75a728da-38aa-49cb-b22f-c8313c522c63"),
                            CategoryId = 6,
                            Description = "La mejor ropa blindada para visitar puente alto",
                            Image = "ropa.jpg",
                            Name = "Blindaje anti portonazo",
                            Price = 10f
                        });
                });

            modelBuilder.Entity("Ferramas.Model.Domain.PurchaseAttempt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Accepted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("AttemptDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("PurchasePrice")
                        .HasColumnType("real");

                    b.Property<string>("TransbankSession")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("Ferramas.Model.Domain.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Ferramas.Model.Domain.Cart", b =>
                {
                    b.HasOne("Ferramas.Model.Domain.FerraUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ferramas.Model.Domain.Product", b =>
                {
                    b.HasOne("Ferramas.Model.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ferramas.Model.Domain.PurchaseAttempt", b =>
                {
                    b.HasOne("Ferramas.Model.Domain.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cart");
                });
#pragma warning restore 612, 618
        }
    }
}
